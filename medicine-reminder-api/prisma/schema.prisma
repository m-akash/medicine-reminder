generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  lastLogin DateTime @default(now())

  fcmToken  String?

  medicines Medicine[]
}

model Medicine {
  id                   String    @id @default(uuid())
  userEmail            String
  name                 String
  dosage               String?
  frequency            String?
  startDate            DateTime? @db.Date
  durationDays         Int?
  originalDurationDays Int?
  instructions         String?
  totalPills           Int
  originalTotalPills   Int?
  pillsPerDose         Int
  dosesPerDay          Int?

  scheduledTime        DateTime
  taken                Boolean

  user              User               @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  reminders         Reminder[]
  medicineTakenDays MedicineTakenDay[]
}

model Reminder {
  id             String  @id @default(uuid())
  medicineId     String
  repeatEveryDay Boolean @default(true)
  isActive       Boolean @default(true)

  medicine Medicine       @relation(fields: [medicineId], references: [id], onDelete: Cascade)
  times    ReminderTime[]
}

model ReminderTime {
  id         String   @id @default(uuid())
  reminderId String
  time       DateTime

  reminder Reminder @relation(fields: [reminderId], references: [id], onDelete: Cascade)
}

model MedicineTakenDay {
  id         String   @id @default(uuid())
  medicineId String
  date       DateTime @db.Date
  taken      String

  medicine Medicine @relation(fields: [medicineId], references: [id], onDelete: Cascade)

  @@unique([medicineId, date])
}

model Pharmacy {
  id      String @id @default(uuid())
  name    String
  address String
  phone   String
}
