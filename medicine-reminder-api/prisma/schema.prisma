generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String
  email         String        @unique
  password      String
  createdAt     DateTime      @default(now())
  lastLogin     DateTime      @default(now())
  fcmToken      String?
  medicines     Medicine[]
  settings      UserSettings?
  notifications Notification[]
}

model Medicine {
  id                   String             @id @default(uuid())
  name                 String
  dosage               String?
  frequency            String
  startDate            DateTime           @db.Date
  durationDays         Int
  instructions         String?
  userEmail            String
  dosesPerDay          Int
  pillsPerDose         Int
  totalPills           Int
  originalDurationDays Int
  originalTotalPills   Int
  scheduledTime        DateTime
  taken                Boolean
  user                 User               @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  medicineTakenDays    MedicineTakenDay[]
  reminders            Reminder[]
}

model Reminder {
  id             String         @id @default(uuid())
  medicineId     String
  repeatEveryDay Boolean        @default(true)
  isActive       Boolean        @default(true)
  medicine       Medicine       @relation(fields: [medicineId], references: [id], onDelete: Cascade)
  times          ReminderTime[]
}

model ReminderTime {
  id         String   @id @default(uuid())
  reminderId String
  time       DateTime
  reminder   Reminder @relation(fields: [reminderId], references: [id], onDelete: Cascade)
}

model MedicineTakenDay {
  id         String   @id @default(uuid())
  medicineId String
  date       DateTime @db.Date
  taken      String
  medicine   Medicine @relation(fields: [medicineId], references: [id], onDelete: Cascade)

  @@unique([medicineId, date])
}

model UserSettings {
  id               String   @id @default(uuid())
  userEmail        String   @unique
  notifications    Json
  medicineDefaults Json
  privacy          Json
  appearance       Json
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)
}

model Notification {
  id           String   @id @default(uuid())
  userEmail    String
  title        String
  message      String
  type         String   // 'reminder', 'missed_dose', 'refill', 'system', 'success'
  isRead       Boolean  @default(false)
  createdAt    DateTime @default(now())
  medicineId   String?
  medicineName String?
  user         User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)
}
